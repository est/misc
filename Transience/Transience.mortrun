# Transience GTD tool using Mortscript
# est presents
# electronicstar@126.com

strSettingsFile = "settings.ini"

# Reading configuration
ForEach section in iniSections (strSettingsFile)
    ForEach key, value in iniKeys ( strSettingsFile, section )
        settings[section][key] = value
    EndForEach
EndForEach
strTimeFormat = settings["Config"]["TimeFormat"]


# Get current date/time e.g. 2008-10-21 1:36:30
tsNow = TimeStamp()
strNow = FormatTime( strTimeFormat, tsNow )

# Read cached timestamps
arrLastTimestamps = Split( settings["Cache"]["LastTimestamps"], ",", TRUE)

# Prompt log some events from previous timestamps?
arrLastTimes[1] = settings["i18n"]["strDeletLastHit"]
For i = 1 to MaxIndex(arrLastTimestamps)
    CallFunction( "ToHumanizedTimeSpan", r, tsNow - arrLastTimestamps[i] )
    arrHumanizedInterval[i+1] = r
    arrLastTimes[i+1] = FormatTime( strTimeFormat, arrLastTimestamps[i] ) & "£¬" & r
    If(i>1)
        NewTimestamps = NewTimestamps & arrLastTimestamps[i] & ","
    EndIf
Next
intSelectedTimestamp = Choice( settings["i18n"]["strChoiceTitle"], settings["i18n"]["strChoiceHint"], 0, settings["Config"]["ChoiceDelay"], arrLastTimes )

If (intSelectedTimestamp <> 1 )
    
    # Append TimestampRecords file
    WriteFile( settings["Config"]["TimestampRecords"], tsNow & "^NL^", TRUE )
    
    # update cached timestamps
    NewTimestamps = NewTimestamps & tsNow
    IniWrite( strSettingsFile, "Cache", "LastTimestamps", NewTimestamps )
    
    # If user actually write something, save it
    if(intSelectedTimestamp > 1)
        strEvent = Input( Replace(settings["i18n"]["strInputMsg"], "%s", arrHumanizedInterval[intSelectedTimestamp]), settings["i18n"]["strInputTitle"] )
        WriteFile( settings["Config"]["LogFile"], """" & FormatTime( strTimeFormat, arrLastTimestamps[intSelectedTimestamp-1] ) & """,""" & strNow & """,""" & Replace( strEvent, """", """""") & """^NL^", TRUE )
    EndIf
    
EndIf


Sub ToHumanizedTimeSpan
    Interval = argv[1]
    If(Interval < 60)
        r = Interval & settings["i18n"]["strSeconds"]
    ElseIf(Interval < 3600)
        r = Interval / 60 & settings["i18n"]["strMinutes"] & Interval MOD 60 & settings["i18n"]["strSeconds"]
    Else
        r = Interval / 3600 & settings["i18n"]["strHours"] & Interval MOD 60 & settings["i18n"]["strMinutes"]
    EndIf
    Return( r )
EndSub